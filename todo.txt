X Implement escape sequence, either by:
	X Using a special tag "\(any)", requiring 1-character classes
	\ Using a global escape sequence when moving cursors, requiring special
	  decoding case
X Make character classes parsing greedy
	X Move cursor logics to external function, check for terminal nodes when no
	  move is possible, add a final move(null) call at the end to handle tags
	  at the end of input stream.
X Fix bug of sample text file
X Differenciate # from * while decoding list tags
X Fix bug: [b]aa[hr]bb[/b]
X Order tags by name, remove when resolved and push to scopes array
X Handle special case for <pre> tag in encoder
X Make first started tag match instead of first ended
X Fix bug: [list]##coin[/list] (first # is ignored)
X Allow parameters with 1+ characters
X Limits should be verified by scanner, not renderer
X Allow multiple matches for same tag
X Implement tokenized string un-parsing
X Escape sequences should be restored by "inverse", not saved
X Empty cycles creates holes in captures
X Add missing yAronet tags and formats (see format.yn.php)
X Plain text escaping should be handled internally: >) should not become &gt;) them &gt[smile]
X Don't add useless escape sequences when using invert conversion
X Parameters capture should be reset only when appropriate
- Empty cycles cause captures to be assigned to a wrong state
- Implement negative character groups
